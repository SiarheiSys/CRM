package org.example;
// Generated by Selenium IDE

import org.example.crm.ConterpartyPage;
import org.example.crm.CreateConterpartyPage;
import org.example.crm.CrmStartPage;
import org.example.crm.PanelControlPage;
import org.junit.jupiter.api.*;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;


import java.util.concurrent.TimeUnit;


public class CreateContactPersonTest {
  private WebDriver driver;

  public void waiting(String str, int sec) {
    new WebDriverWait(driver, sec).until(ExpectedConditions.titleContains(str));
  }

  public void waitSimple(int sec) {
    new WebDriverWait(driver, sec);
  }

  @BeforeEach
  public void setUp() {
    System.setProperty("webdriver.chrome.driver", "chromedriver.exe");
    driver = new ChromeDriver();
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
    driver.manage().window().maximize();
  }

  @AfterEach
  public void tearDown() {
    driver.quit();
  }

  @DisplayName("Создание контактного лица")
  @Test
  public void createContactPerson() {
    driver.get("https://crm.geekbrains.space/user/login");
    CrmStartPage startPage = new CrmStartPage(driver);
    Assertions.assertNotNull(startPage.getTitle(), "Нет заголовка окна");
    Assertions.assertEquals("Логин", driver.getTitle());
    startPage.usernameFieldSendKeys("Applanatest1")
            .passwordFieldSendKeys("Student2020!");
    Assertions.assertNotNull(startPage.getUsernameField(), "Поле 'логин' не заполнено");
    Assertions.assertEquals("Applanatest1", startPage.getUsernameField().getAttribute("value"));
    Assertions.assertNotNull(startPage.getPasswordField(), "Поле 'пароль' не заполнено");
    Assertions.assertEquals("Student2020!", startPage.getPasswordField().getAttribute("value"));
    Assertions.assertEquals("Войти", startPage.getSubmitBtn().getText());
    startPage.submitBtnClick();
    waiting("Панель инструментов", 30);
    PanelControlPage panelControl = new PanelControlPage(driver);
    Assertions.assertNotNull(panelControl.getTitle(), "Нет заголовка окна");
    Assertions.assertEquals("Панель инструментов", driver.getTitle());
    panelControl.counterpartyClick()
            .contactPersonsClick();
    waiting("Все - Контактные лица - Контактные лица - Контрагенты", 30);
    ConterpartyPage conterparty = new ConterpartyPage(driver);
    Assertions.assertNotNull(conterparty.getTitle(), "Нет заголовка окна");
    Assertions.assertEquals("Все - Контактные лица - Контактные лица - Контрагенты", driver.getTitle());
    conterparty.createConterpartyClick();
    waiting("Создать контактное лицо - Контактные лица - Контрагенты", 30);
    CreateConterpartyPage contact = new CreateConterpartyPage(driver);
    Assertions.assertNotNull(contact.getTitle(), "Нет заголовка окна");
    Assertions.assertEquals("Создать контактное лицо - Контактные лица - Контрагенты", driver.getTitle());
    contact.lastNameSendKeys("Сыс")
            .firstNameSendKeys("Сергей");
    Assertions.assertNotNull(contact.getLastName(), "Поле 'Фамилия' не заполнено");
    Assertions.assertEquals("Сыс", contact.getLastName().getAttribute("value"));
    Assertions.assertNotNull(contact.getFirstName(), "Поле 'Имя' не заполнено");
    Assertions.assertEquals("Сергей", contact.getFirstName().getAttribute("value"));
    contact.arrowClick();
    waitSimple(30);
    Assertions.assertTrue(contact.getResult().isDisplayed());
    contact.resultClick()
            .jobTitleSendKeys("Генеральный директор");
    Assertions.assertNotNull(contact.getJobTitle(), "Поле 'Должность' не заполнено");
    Assertions.assertEquals("Генеральный директор", contact.getJobTitle().getAttribute("value"));
    Assertions.assertEquals("Сохранить и закрыть", contact.getSaveAndCloseBtn().getText());
    contact.saveAndCloseBtnClick();
  }
}
