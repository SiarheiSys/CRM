// Generated by Selenium IDE
package org.example;

import org.example.dairy.AuthorizationPage;
import org.example.dairy.AuthorizedPage;
import org.example.dairy.StartPage;
import org.junit.jupiter.api.*;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.logging.LogEntries;
import org.openqa.selenium.logging.LogEntry;
import org.openqa.selenium.logging.LogType;
import org.openqa.selenium.support.ui.WebDriverWait;


import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import java.util.concurrent.TimeUnit;

public class AuthorizationTest {
    private WebDriver driver;

    public void waiting(int sec) {
        new WebDriverWait(driver, sec);
    }

    @BeforeEach
    public void setUp() {
        System.setProperty("webdriver.chrome.driver", "chromedriver.exe");
        driver = new ChromeDriver();
        driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
        driver.manage().window().maximize();
    }

    @AfterEach
    public void tearDown() {
        LogEntries browserLogs = driver.manage().logs().get(LogType.BROWSER);
        List<LogEntry> allLogRows = browserLogs.getAll();
        if (allLogRows.size() > 0 ) {
            try (BufferedWriter out = new BufferedWriter(new FileWriter("AuthorizationTest.log", true))){
                out.write(String.valueOf(allLogRows));
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        driver.quit();
    }

    @DisplayName("Авторизация")
    @Test
    public void authorization() {
        driver.get("https://diary.ru/");
        StartPage start = new StartPage(driver);
        Assertions.assertNotNull(start.getTitle(), "Нет заголовка окна");
        Assertions.assertEquals("Главная страница — @дневники: асоциальная сеть", driver.getTitle());
        Assertions.assertEquals("Вход", start.getEntry().getText());
        start.entryClick();
        AuthorizationPage page = new AuthorizationPage(driver)
                .login("sissergey")
                .password("63623400");
        Assertions.assertNotNull(page.getLogin(), "Поле 'логин' не заполнено");
        Assertions.assertEquals("sissergey", page.getLogin().getAttribute("value"));
        Assertions.assertNotNull(page.getPassword(), "Поле 'пароль' не заполнено");
        Assertions.assertEquals("63623400", page.getPassword().getAttribute("value"));
        driver.switchTo().frame(0);
        page.recaptcha();
        waiting(30);
        driver.switchTo().defaultContent();
        Assertions.assertEquals("Войти", page.getLoginBtn().getText());
        page.loginBtn();
        waiting(30);
        AuthorizedPage page1 = new AuthorizedPage(driver)
                .my();
        Assertions.assertEquals("Мой дневник", page1.getMy().getText());
    }
}
